{"message":"unknown character escape: `(`","code":null,"level":"error","spans":[{"file_name":"src\\day_008\\task0.rs","byte_start":170,"byte_end":171,"line_start":6,"line_end":6,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");","highlight_start":46,"highlight_end":47}],"label":"unknown character escape","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if you meant to write a literal backslash (perhaps escaping in a regular expression), consider a raw string literal","code":null,"level":"help","spans":[{"file_name":"src\\day_008\\task0.rs","byte_start":142,"byte_end":193,"line_start":6,"line_end":6,"column_start":18,"column_end":69,"is_primary":true,"text":[{"text":"        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");","highlight_start":18,"highlight_end":69}],"label":null,"suggested_replacement":"r\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unknown character escape: `(`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\day_008\\task0.rs:6:46\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown character escape\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you meant to write a literal backslash (perhaps escaping in a regular expression), consider a raw string literal\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        println!(\u001b[0m\u001b[0m\u001b[38;5;10mr\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\"\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"unknown character escape: `)`","code":null,"level":"error","spans":[{"file_name":"src\\day_008\\task0.rs","byte_start":191,"byte_end":192,"line_start":6,"line_end":6,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");","highlight_start":67,"highlight_end":68}],"label":"unknown character escape","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if you meant to write a literal backslash (perhaps escaping in a regular expression), consider a raw string literal","code":null,"level":"help","spans":[{"file_name":"src\\day_008\\task0.rs","byte_start":142,"byte_end":193,"line_start":6,"line_end":6,"column_start":18,"column_end":69,"is_primary":true,"text":[{"text":"        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");","highlight_start":18,"highlight_end":69}],"label":null,"suggested_replacement":"r\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unknown character escape: `)`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\day_008\\task0.rs:6:67\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        println!(\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown character escape\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if you meant to write a literal backslash (perhaps escaping in a regular expression), consider a raw string literal\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        println!(\u001b[0m\u001b[0m\u001b[38;5;10mr\"The quadratic equation is \\( ax^2 + bx + c = 0 \\)\"\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
